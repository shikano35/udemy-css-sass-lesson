/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}

.header {
    height: 95vh;
    /* linear-gradientはグラデーション。 */
    background-image: linear-gradient(
        to right bottom,
        rgba(126, 213, 111, 0.8),
        rgba(40, 180, 131, 0.8)),
    url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    position: relative; /* 親要素にrelativeを指定することで、子要素のposition: absolute;が効く */

    clip-path:polygon(0 0, 100% 0, 100% 75%, 0 100%);   /* (x y)で考える。つまり、左上、右上、右下、左下 */
}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    height: 35px;
}

.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);   /* 上に50%ずらす 左に50%ずらす */
    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;      /* 大文字のテキストにする */
    /* このbackface-visibilityを使用することで、アニメーション後にある違和感を取り除ける（ここではアニメーション後に少し上に動く） */
    /* 使用しなくとも良いっぽい？ */
    /* backface-visibility: hidden;    裏面を非表示にする */
    margin-top: 60px;
    margin-bottom: 60px;
}

.heading-primary-main {
   display: block;                          /* ブロック要素にする(改行するため) */
    font-size: 60px;                        /* 文字サイズ */
    font-weight: 400;                       /* 太さ */
    letter-spacing: 35px;                   /* 文字間のスペース */

    /* アニメーション */
    animation: moveInLeft;                  /* アニメーション */
    animation-duration: 1s;               /* アニメーションの時間 */
    /* ease-inは時間と共に加速する */
    /* ease-outは時間と共に減速する */
    animation-timing-function: ease-out;    /* アニメーションのタイミング */
    /* animation-iteration-count: 3;           アニメーションの繰り返し回数 */
    /* animation-delay: 3s;                    アニメーションの遅延 */
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;
    animation: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

/* 左から右へのフェードイン */
@keyframes moveInLeft {
    0% {
        opacity: 0;                     /* 透明にする */
        transform: translateX(-100px);  /* 左に100pxずらす */
    }

    80% {
        transform: translateX(10px);    /* 右に10pxずらす */
    }

    100% {
        opacity: 1;                     /* 不透明にする */
        transform: translate(0);        /* ずらさない */ 
    }
}

/* 右から左へのフェードイン */
@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

/* 下から上へのフェードイン */
@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(30px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

/* リンクをクリックすると紫色になることがあるよね */
.btn:link,
.btn:visited {
    text-transform: uppercase;    /* 大文字にする */
    text-decoration: none;        /* 下線を消す */
    padding: 15px 40px;           /* 上下 左右 */
    display: inline-block;        /* インラインブロック要素にする */
    border-radius: 100px;         /* 角を丸くする */
    transition: all .2s;         /* 0.2秒で変化する */
    position: relative;
} 

.btn:hover {
    transform: translateY(-3px);    /* 上に3pxずらす */
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);    /* 影をつける(x方向 y方向 ぼかし rgba(r,g,b,透明度(20%))) */
}

/* クリックした時の挙動 */
.btn:active {
    transform: translateY(-1px);    /* 上に1pxずらす */
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);    /* 影をつける(x方向 y方向 ぼかし rgba(r,g,b,透明度(20%))) */
}

.btn-white {
    background-color: #fff;
    color: #777;
}

/* ボタンが親 */
.btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn-white::after {
    background-color: #fff;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);   /* 横に1.4倍 縦に1.6倍 */
    opacity: 0;
}

.btn-animated {
    animation: moveInBottom .5s ease-out .75s;  /* 名前 時間 タイミング 遅延 */
    animation-fill-mode: backwards;           /* アニメーションが始まる前に最初の状態に戻す(これによって、アニメーション後の画面が最初に表示されない) */
}